name: Pull and clean properties

on:
  workflow_dispatch: {}
  # Uncomment to enable a scheduled run (e.g., every day at 02:30 UTC)
  # schedule:
  #   - cron: "30 2 * * *"

permissions:
  contents: write

concurrency:
  group: pull-and-clean-${{ github.ref }}
  cancel-in-progress: false

jobs:
  pull-clean:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Transifex client (tx)
        run: |
          python -m pip install --upgrade pip
          pip install transifex-client

      - name: Configure Transifex credentials
        env:
          TRANSIFEX_TOKEN: ${{ secrets.TRANSIFEX_TOKEN }}
        run: |
          if [ -z "$TRANSIFEX_TOKEN" ]; then
            echo "TRANSIFEX_TOKEN secret is not set" >&2
            exit 1
          fi
          mkdir -p "$HOME"
          cat > "$HOME/.transifexrc" <<EOF
[https://www.transifex.com]
hostname = https://www.transifex.com
username = api
password = ${TRANSIFEX_TOKEN}
EOF
          # Obscure token in logs
          echo "Created ~/.transifexrc"

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure branches are available
        run: |
          set -euo pipefail
          git fetch origin main transifex || true
          # Create transifex branch if it doesn't exist on origin
          if ! git ls-remote --exit-code --heads origin transifex >/dev/null 2>&1; then
            echo "transifex branch not found on origin; creating from origin/main"
            git checkout -B transifex origin/main
            git push -u origin transifex
          fi

      - name: Run pull_and_clean_properties.sh
        run: bash ./pull_and_clean_properties.sh

      - name: Commit and push changes (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          if [ -n "$(git status --porcelain)" ]; then
            # Ensure we are on transifex branch as the script leaves us there
            current_branch=$(git branch --show-current)
            if [ "$current_branch" != "transifex" ]; then
              git checkout transifex
            fi
            git add -A
            git commit -m "chore(i18n): pull and normalize .properties via CI"
            git push origin transifex
            echo "Changes pushed to transifex branch."
          else
            echo "No changes to commit."
          fi


